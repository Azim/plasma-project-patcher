using System;
using System.Collections;
using System.Reflection;
using Unity.Netcode;
using UnityEngine;

// ? eat my socks Unity and your lack of using domain reload
public static class ResetNetcodeRpcTables {
    [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
    private static void OnBeforeSceneLoadRuntimeMethod() {
        ResetRpcFuncTable();
    }
        
#if UNITY_EDITOR
    [UnityEditor.InitializeOnLoadMethod]
    private static void OnInitializeOnLoadMethod() {
        ResetRpcFuncTable();
    }
#endif

    private static void ResetRpcFuncTable() {
        var rpcFuncTableField = typeof(NetworkManager).GetField("__rpc_func_table");
        var rpcNameTableField = typeof(NetworkManager).GetField("__rpc_name_table");
        var rpcFuncTable = (IDictionary)rpcFuncTableField.GetValue(null);
        var rpcNameTable = (IDictionary)rpcNameTableField.GetValue(null);
        rpcFuncTable.Clear();
        rpcNameTable.Clear();
        rpcFuncTableField.SetValue(null, rpcFuncTable);
        rpcNameTableField.SetValue(null, rpcNameTable);
        // Debug.Log("Reset rpc_func_table and rpc_name_table.");
    }
}
